<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.doctor_fish_back.repository.admin.AdminAnnouncementMapper">

    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        insert into announcement_tb
        values(default, #{userId}, #{title}, #{content}, now(), now())
    </insert>

    <update id="modify">
        update announcement_tb
        set
            title = #{title},
            content = #{content},
            update_date = now()
        where
            id = #{id}
    </update>

    <delete id="deleteById">
        delete
        from
            announcement_tb
        where
            id = #{id}
    </delete>

    <select id="findById" resultType="com.project.doctor_fish_back.entity.Announcement">
        select
            at.id,
            at.user_id as userId,
            at.title,
            at.content,
            at.register_date as registerDate,
            at.update_date as updateDate,
            ut.name as userName,
            ut.img as userImg
        from
            announcement_tb at
            left outer join user_tb ut on(at.user_id = ut.id)
        where
            at.id = #{id}
    </select>

    <select id="announcementListByLimit" resultType="com.project.doctor_fish_back.entity.Announcement">
        select
            at.id,
            at.user_id as userId,
            at.title,
            at.content,
            at.register_date as registerDate,
            at.update_date as updateDate,
            ut.name as userName,
            ut.img as userImg
        from
            announcement_tb at
            left outer join user_tb ut on(at.user_id = ut.id)
        order by
            registerDate
        limit 0, #{limit}
    </select>

    <select id="announcementList" resultType="com.project.doctor_fish_back.entity.Announcement">
        select
            at.id,
            at.user_id as userId,
            at.title,
            at.content,
            at.register_date as registerDate,
            at.update_date as updateDate,
            ut.name as userName,
            ut.img as userImg
        from
            announcement_tb at
            left outer join user_tb ut on(at.user_id = ut.id)
        where
            at.title like concat("%", #{searchText}, "%")
        order by
            registerDate
        limit #{startIndex}, #{limit}
    </select>

    <select id="announcementCount" resultType="java.lang.Long">
        select
            count(*)
        from
            announcement_tb at
            left outer join user_tb ut on(at.user_id = ut.id)
        where
            at.title like concat("%", #{searchText}, "%")
    </select>

</mapper>